[{"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\index.js":"1","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\App.js":"2","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\MainComponent.js":"4","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\HeaderComponent.js":"5","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\MenuComponent.js":"7","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\FooterComponent.js":"8","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\ContactComponent.js":"9","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\AboutComponent.js":"11","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\dishes.js":"12","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\comment.js":"13","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\leaders.js":"15","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\CommentForm.js":"17","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\promotions.js":"18","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\leaders.js":"19","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\dishes.js":"20","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\comments.js":"21","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\ActionType.js":"22","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\ActionCreators.js":"23","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\LoadingComponent.js":"24","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\Forms.js":"25","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\baseUrl.js":"26"},{"size":663,"mtime":1612947695875,"results":"27","hashOfConfig":"28"},{"size":560,"mtime":1612949603630,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":3617,"mtime":1613320359011,"results":"31","hashOfConfig":"28"},{"size":5338,"mtime":1612947695872,"results":"32","hashOfConfig":"28"},{"size":2968,"mtime":1613320228069,"results":"33","hashOfConfig":"28"},{"size":2107,"mtime":1613313399386,"results":"34","hashOfConfig":"28"},{"size":2843,"mtime":1612947695871,"results":"35","hashOfConfig":"28"},{"size":9449,"mtime":1613298152384,"results":"36","hashOfConfig":"28"},{"size":1553,"mtime":1613314986440,"results":"37","hashOfConfig":"28"},{"size":4277,"mtime":1612947695867,"results":"38","hashOfConfig":"28"},{"size":1490,"mtime":1612947695877,"results":"39","hashOfConfig":"28"},{"size":4279,"mtime":1612947695876,"results":"40","hashOfConfig":"28"},{"size":445,"mtime":1612947695879,"results":"41","hashOfConfig":"28"},{"size":2382,"mtime":1612947695878,"results":"42","hashOfConfig":"28"},{"size":792,"mtime":1613295599952,"results":"43","hashOfConfig":"28"},{"size":3580,"mtime":1613107270967,"results":"44","hashOfConfig":"28"},{"size":625,"mtime":1613312966665,"results":"45","hashOfConfig":"28"},{"size":187,"mtime":1613067092023,"results":"46","hashOfConfig":"28"},{"size":596,"mtime":1613314702627,"results":"47","hashOfConfig":"28"},{"size":657,"mtime":1613320137967,"results":"48","hashOfConfig":"28"},{"size":418,"mtime":1613310781335,"results":"49","hashOfConfig":"28"},{"size":4461,"mtime":1613321291585,"results":"50","hashOfConfig":"28"},{"size":274,"mtime":1613279441361,"results":"51","hashOfConfig":"28"},{"size":169,"mtime":1613290709077,"results":"52","hashOfConfig":"28"},{"size":48,"mtime":1613313767925,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"syocem",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\index.js",[],["112","113"],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\App.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\MainComponent.js",["114","115"],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\DishdetailComponent.js",["116","117"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from \"./CommentForm\";\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderDish(dish, comments, addComment, dishId) {\r\n\r\n    if (dish != null) {\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 mt-1\">\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl+dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-md-5\">\r\n                    <h4> Comments </h4>\r\n                    {RenderComments(comments)}\r\n                    <CommentForm dishId={dishId} addComment_={addComment} />\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n    else {\r\n\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments(comentarray) {\r\n\r\n    const comments = comentarray.map((com) => {\r\n        return (\r\n\r\n            <div key={com.id} className=\"ul list-unstyled\">\r\n                <li>{com.comment}</li>\r\n                <br></br>\r\n                <li>{com.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(com.date)))}</li>\r\n                <br></br>\r\n            </div>\r\n        )\r\n    });\r\n    return comments;\r\n};\r\n\r\n\r\nconst Dishdetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                {RenderDish(props.dish, props.comments, props.postComment, props.dish.id)}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Dishdetail;\r\n","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\ContactComponent.js",["118","119","120","121","122","123","124","125","126"],"import React, { Component } from 'react';\r\n\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form,actions, Errors } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        \r\n        alert(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <h3>Send us your Feedback</h3>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" className=\"form-control\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 char',\r\n                                        maxLength: 'Must be less than 15 chars'\r\n                                    }}>\r\n                                    </Errors>\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" className=\"form-control\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 char',\r\n                                        maxLength: 'Must be less than 15 chars'\r\n                                    }}>\r\n\r\n\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"tel\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" className=\"form-control\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" \r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 char',\r\n                                        maxLength: 'Must be less than 15 chars',\r\n                                        isNumber: 'Should be a number'\r\n                                    }}>\r\n\r\n                                    </Errors>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }} />\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid email address'\r\n                                    }}></Errors>\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" className=\"form-check-input\" name=\"agree\" /> {''}\r\n                                            <strong>May we Contact You</strong>\r\n                                        </Label>\r\n                                    </div>\r\n\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" className=\"form-control\" name=\"contactType\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" className=\"form-control\" id=\"message\" name=\"message\" rows=\"12\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\comment.js",[],["127","128"],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\CommentForm.js",["129","130","131","132"],"import React, { Component } from 'react';\r\nimport { Button, Modal, ModalBody, ModalHeader, Row, Col, Label } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen });\r\n\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current State is: \" + JSON.stringify(values))\r\n        console.log(this.props);\r\n        this.props.addComment_(this.props.dishId, values.rating, values.author, values.comment);\r\n        this.toggleModal();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}><strong>Submit Comment</strong></ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Col className=\"form-group\">\r\n                                <Label htmlfor=\"rating\" > <strong>Rating</strong></Label>\r\n                                <Control.select model=\".rating\" className=\"form-control\" name=\"rating\" >\r\n                                    <option selected=\"selected\">1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                            <Col className=\"form-group\">\r\n                                <Label htmlfor=\"author\"><strong>Your Name</strong></Label>\r\n                                <Control.text model=\".author\" className=\"form-control\" id=\"author\" name=\"author\" placeholder=\"Your Name\" \r\n                                validators ={{\r\n                                    maxLength: maxLength(15), minLength: minLength(3)\r\n                                }}/>\r\n                                <Errors className=\"text-danger\" show=\"touched\" model=\".author\" messages={{\r\n                                    maxLength: 'Name must be less than 15 chars',\r\n                                    minLength: 'Name must be greater than 2 chars'\r\n                                }} />\r\n\r\n                            </Col>\r\n                            <Col className=\"form-group\">\r\n                                <Label htmlfor=\"comment\"><strong>Comment</strong></Label>\r\n                                <Control.textarea model=\".comment\" className=\"form-control\" rows=\"6\" name=\"comment\"></Control.textarea>\r\n                            </Col>\r\n                            <Col className=\"form-group\">\r\n                                <Button color=\"primary\">Submit</Button>\r\n                            </Col>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CommentForm;","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\comments.js",["133"],"import { act } from 'react-dom/test-utils';\r\nimport * as ActionTypes from \"./ActionType\";\r\n\r\nexport const Comments = (state = { \r\n    errMess: null,\r\n    comments: []\r\n},  action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state , errmess:action.payload,comments: []}\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)}\r\n\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}","C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\ActionType.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\components\\LoadingComponent.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\redux\\Forms.js",[],"C:\\Users\\sriva\\Documents\\WebD\\Front-End-Devlopment-React\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":11,"column":24,"nodeType":"140","messageId":"141","endLine":11,"endColumn":37},{"ruleId":"142","severity":1,"message":"143","line":34,"column":5,"nodeType":"144","messageId":"145","endLine":36,"endColumn":6},{"ruleId":"138","severity":1,"message":"146","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"147","line":2,"column":56,"nodeType":"140","messageId":"141","endLine":2,"endColumn":62},{"ruleId":"138","severity":1,"message":"148","line":5,"column":24,"nodeType":"140","messageId":"141","endLine":5,"endColumn":31},{"ruleId":"149","severity":1,"message":"150","line":71,"column":29,"nodeType":"151","endLine":71,"endColumn":71},{"ruleId":"152","severity":1,"message":"153","line":83,"column":37,"nodeType":"151","endLine":86,"endColumn":46},{"ruleId":"152","severity":1,"message":"153","line":100,"column":37,"nodeType":"151","endLine":103,"endColumn":46},{"ruleId":"152","severity":1,"message":"153","line":118,"column":37,"nodeType":"151","endLine":121,"endColumn":42},{"ruleId":"152","severity":1,"message":"153","line":136,"column":37,"nodeType":"151","endLine":139,"endColumn":42},{"ruleId":"152","severity":1,"message":"154","line":151,"column":45,"nodeType":"151","endLine":151,"endColumn":122},{"ruleId":"152","severity":1,"message":"155","line":158,"column":37,"nodeType":"151","endLine":158,"endColumn":119},{"ruleId":"152","severity":1,"message":"156","line":167,"column":37,"nodeType":"151","endLine":167,"endColumn":137},{"ruleId":"134","replacedBy":"157"},{"ruleId":"136","replacedBy":"158"},{"ruleId":"138","severity":1,"message":"159","line":2,"column":49,"nodeType":"140","messageId":"141","endLine":2,"endColumn":52},{"ruleId":"152","severity":1,"message":"155","line":43,"column":33,"nodeType":"151","endLine":43,"endColumn":105},{"ruleId":"152","severity":1,"message":"153","line":53,"column":33,"nodeType":"151","endLine":56,"endColumn":37},{"ruleId":"152","severity":1,"message":"156","line":65,"column":33,"nodeType":"151","endLine":65,"endColumn":117},{"ruleId":"138","severity":1,"message":"160","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'dishesLoading' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","'Button' is defined but never used.","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["161"],["162"],"'Row' is defined but never used.","'act' is defined but never used.","no-global-assign","no-unsafe-negation"]